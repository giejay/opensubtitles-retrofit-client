/*
 * OpenSubtitles API
 * Explore subtitles API here
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@opensubtitles.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.giejay.subtitles.opensubtitles.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import java.math.BigDecimal;

/**
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-26T20:07:01.076156+02:00[Europe/Amsterdam]")
public class DownloadRequest {
  public static final String SERIALIZED_NAME_FILE_ID = "file_id";
  @SerializedName(SERIALIZED_NAME_FILE_ID)
  private Integer fileId;

  public static final String SERIALIZED_NAME_SUB_FORMAT = "sub_format";
  @SerializedName(SERIALIZED_NAME_SUB_FORMAT)
  private String subFormat;

  public static final String SERIALIZED_NAME_FILE_NAME = "file_name";
  @SerializedName(SERIALIZED_NAME_FILE_NAME)
  private String fileName;

  public static final String SERIALIZED_NAME_IN_FPS = "in_fps";
  @SerializedName(SERIALIZED_NAME_IN_FPS)
  private BigDecimal inFps;

  public static final String SERIALIZED_NAME_OUT_FPS = "out_fps";
  @SerializedName(SERIALIZED_NAME_OUT_FPS)
  private BigDecimal outFps;

  public static final String SERIALIZED_NAME_TIMESHIFT = "timeshift";
  @SerializedName(SERIALIZED_NAME_TIMESHIFT)
  private BigDecimal timeshift;

  public static final String SERIALIZED_NAME_FORCE_DOWNLOAD = "force_download";
  @SerializedName(SERIALIZED_NAME_FORCE_DOWNLOAD)
  private Boolean forceDownload;

  public DownloadRequest() {
  }

  public DownloadRequest fileId(Integer fileId) {

    this.fileId = fileId;
    return this;
  }

   /**
   * file_id from /subtitles search results
   * @return fileId
  **/
  @javax.annotation.Nonnull

  public Integer getFileId() {
    return fileId;
  }


  public void setFileId(Integer fileId) {
    this.fileId = fileId;
  }


  public DownloadRequest subFormat(String subFormat) {

    this.subFormat = subFormat;
    return this;
  }

   /**
   * from /infos/formats
   * @return subFormat
  **/
  @javax.annotation.Nullable

  public String getSubFormat() {
    return subFormat;
  }


  public void setSubFormat(String subFormat) {
    this.subFormat = subFormat;
  }


  public DownloadRequest fileName(String fileName) {

    this.fileName = fileName;
    return this;
  }

   /**
   * desired file name
   * @return fileName
  **/
  @javax.annotation.Nullable

  public String getFileName() {
    return fileName;
  }


  public void setFileName(String fileName) {
    this.fileName = fileName;
  }


  public DownloadRequest inFps(BigDecimal inFps) {

    this.inFps = inFps;
    return this;
  }

   /**
   * used for conversions, in_fps and out_fps must then be indicated
   * @return inFps
  **/
  @javax.annotation.Nullable

  public BigDecimal getInFps() {
    return inFps;
  }


  public void setInFps(BigDecimal inFps) {
    this.inFps = inFps;
  }


  public DownloadRequest outFps(BigDecimal outFps) {

    this.outFps = outFps;
    return this;
  }

   /**
   * used for conversions, in_fps and out_fps must then be indicated
   * @return outFps
  **/
  @javax.annotation.Nullable

  public BigDecimal getOutFps() {
    return outFps;
  }


  public void setOutFps(BigDecimal outFps) {
    this.outFps = outFps;
  }


  public DownloadRequest timeshift(BigDecimal timeshift) {

    this.timeshift = timeshift;
    return this;
  }

   /**
   *
   * @return timeshift
  **/
  @javax.annotation.Nullable

  public BigDecimal getTimeshift() {
    return timeshift;
  }


  public void setTimeshift(BigDecimal timeshift) {
    this.timeshift = timeshift;
  }


  public DownloadRequest forceDownload(Boolean forceDownload) {

    this.forceDownload = forceDownload;
    return this;
  }

   /**
   * (1/0) set subtitle file headers to \&quot;application/force-download\&quot;
   * @return forceDownload
  **/
  @javax.annotation.Nullable

  public Boolean getForceDownload() {
    return forceDownload;
  }


  public void setForceDownload(Boolean forceDownload) {
    this.forceDownload = forceDownload;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DownloadRequest downloadRequest = (DownloadRequest) o;
    return Objects.equals(this.fileId, downloadRequest.fileId) &&
        Objects.equals(this.subFormat, downloadRequest.subFormat) &&
        Objects.equals(this.fileName, downloadRequest.fileName) &&
        Objects.equals(this.inFps, downloadRequest.inFps) &&
        Objects.equals(this.outFps, downloadRequest.outFps) &&
        Objects.equals(this.timeshift, downloadRequest.timeshift) &&
        Objects.equals(this.forceDownload, downloadRequest.forceDownload);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, subFormat, fileName, inFps, outFps, timeshift, forceDownload);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DownloadRequest {\n");
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    subFormat: ").append(toIndentedString(subFormat)).append("\n");
    sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
    sb.append("    inFps: ").append(toIndentedString(inFps)).append("\n");
    sb.append("    outFps: ").append(toIndentedString(outFps)).append("\n");
    sb.append("    timeshift: ").append(toIndentedString(timeshift)).append("\n");
    sb.append("    forceDownload: ").append(toIndentedString(forceDownload)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

