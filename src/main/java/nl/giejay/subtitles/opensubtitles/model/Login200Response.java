/*
 * OpenSubtitles API
 * Explore subtitles API here
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@opensubtitles.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package nl.giejay.subtitles.opensubtitles.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Login200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-05-26T20:07:01.076156+02:00[Europe/Amsterdam]")
public class Login200Response {
  public static final String SERIALIZED_NAME_USER = "user";
  @SerializedName(SERIALIZED_NAME_USER)
  private Login200ResponseUser user;

  /**
   * Gets or Sets baseUrl
   */
  @JsonAdapter(BaseUrlEnum.Adapter.class)
  public enum BaseUrlEnum {
    API_OPENSUBTITLES_COM("api.opensubtitles.com"),

    VIP_API_OPENSUBTITLES_COM("vip-api.opensubtitles.com");

    private String value;

    BaseUrlEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static BaseUrlEnum fromValue(String value) {
      for (BaseUrlEnum b : BaseUrlEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<BaseUrlEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BaseUrlEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BaseUrlEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return BaseUrlEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_BASE_URL = "base_url";
  @SerializedName(SERIALIZED_NAME_BASE_URL)
  private BaseUrlEnum baseUrl = BaseUrlEnum.API_OPENSUBTITLES_COM;

  public static final String SERIALIZED_NAME_TOKEN = "token";
  @SerializedName(SERIALIZED_NAME_TOKEN)
  private String token;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private BigDecimal status;

  public Login200Response() {
  }

  public Login200Response user(Login200ResponseUser user) {

    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @javax.annotation.Nonnull

  public Login200ResponseUser getUser() {
    return user;
  }


  public void setUser(Login200ResponseUser user) {
    this.user = user;
  }


  public Login200Response baseUrl(BaseUrlEnum baseUrl) {

    this.baseUrl = baseUrl;
    return this;
  }

   /**
   * Get baseUrl
   * @return baseUrl
  **/
  @javax.annotation.Nonnull

  public BaseUrlEnum getBaseUrl() {
    return baseUrl;
  }


  public void setBaseUrl(BaseUrlEnum baseUrl) {
    this.baseUrl = baseUrl;
  }


  public Login200Response token(String token) {

    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nonnull

  public String getToken() {
    return token;
  }


  public void setToken(String token) {
    this.token = token;
  }


  public Login200Response status(BigDecimal status) {

    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull

  public BigDecimal getStatus() {
    return status;
  }


  public void setStatus(BigDecimal status) {
    this.status = status;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Login200Response login200Response = (Login200Response) o;
    return Objects.equals(this.user, login200Response.user) &&
        Objects.equals(this.baseUrl, login200Response.baseUrl) &&
        Objects.equals(this.token, login200Response.token) &&
        Objects.equals(this.status, login200Response.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(user, baseUrl, token, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Login200Response {\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    baseUrl: ").append(toIndentedString(baseUrl)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

